const fibMemo = (n, cached=[0,1])=>{
  if(cached[n]!==undefined) return cached[n];
  else return cached[n]=fibMemo(n-1, cached)+fibMemo(n-2, cached)
}
// console.log(fibMemo(0))
// console.log(fibMemo(1))
// console.log(fibMemo(2))
// console.log(fibMemo(2))

// console.log(fibMemo(10))

const fibo = (n)=>{
  console.log('ㅂ');
  if(n<2) return n;
  else return fibo(n-1)+fibo(n-2)
}

// 9번 
//11 번
console.log(fibo(10));

// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1 ]
// [ 0, 1, 1 ]
// [ 0, 1, 1, 2 ]
// [ 0, 1, 1, 2, 3 ]
// [ 0, 1, 1, 2, 3, 5 ]
// [ 0, 1, 1, 2, 3, 5, 8 ]
// [ 0, 1, 1, 2, 3, 5, 8, 13 ]
// [ 0, 1, 1, 2, 3, 5, 8, 13, 21 ]
// [ 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ]
// 55

// ㅂ 44~221
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// ㅂ
// 55